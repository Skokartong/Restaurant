// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Data;

#nullable disable

namespace Restaurant.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20240905194600_Table")]
    partial class Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("FK_RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("FK_RestaurantId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            Name = "John Doe",
                            Phone = "123456790"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            Name = "Jane Smith",
                            Phone = "98743210"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice@example.com",
                            Name = "Alice Johnson",
                            Phone = "65654654"
                        });
                });

            modelBuilder.Entity("Restaurant.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Drink")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("FK_RestaurantId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("NameOfDish")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FK_RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Drink = "Wine",
                            FK_RestaurantId = 1,
                            IsAvailable = true,
                            NameOfDish = "Spaghetti Carbonara",
                            Price = 12.99
                        },
                        new
                        {
                            Id = 2,
                            Drink = "Sake",
                            FK_RestaurantId = 2,
                            IsAvailable = true,
                            NameOfDish = "Sushi Combo",
                            Price = 15.99
                        },
                        new
                        {
                            Id = 3,
                            Drink = "Beer",
                            FK_RestaurantId = 3,
                            IsAvailable = true,
                            NameOfDish = "Grilled Steak",
                            Price = 20.989999999999998
                        });
                });

            modelBuilder.Entity("Restaurant.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FK_MenuId")
                        .HasColumnType("int");

                    b.Property<int>("FK_TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_CustomerId");

                    b.HasIndex("FK_MenuId");

                    b.HasIndex("FK_TableId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Restaurant.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FK_RestaurantId")
                        .HasColumnType("int");

                    b.Property<int?>("FK_TableId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_CustomerId");

                    b.HasIndex("FK_RestaurantId");

                    b.HasIndex("FK_TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingEnd = new DateTime(2024, 9, 6, 0, 45, 59, 852, DateTimeKind.Local).AddTicks(1885),
                            BookingStart = new DateTime(2024, 9, 5, 22, 45, 59, 852, DateTimeKind.Local).AddTicks(1828),
                            FK_CustomerId = 1,
                            FK_RestaurantId = 1,
                            FK_TableId = 1,
                            NumberOfGuests = 2
                        },
                        new
                        {
                            Id = 2,
                            BookingEnd = new DateTime(2024, 9, 6, 23, 45, 59, 852, DateTimeKind.Local).AddTicks(1894),
                            BookingStart = new DateTime(2024, 9, 6, 21, 45, 59, 852, DateTimeKind.Local).AddTicks(1890),
                            FK_CustomerId = 2,
                            FK_RestaurantId = 2,
                            FK_TableId = 3,
                            NumberOfGuests = 3
                        });
                });

            modelBuilder.Entity("Restaurant.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeOfRestaurant")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RestaurantName = "Italian Bistro",
                            TypeOfRestaurant = "Italian"
                        },
                        new
                        {
                            Id = 2,
                            RestaurantName = "Sushi Palace",
                            TypeOfRestaurant = "Japanese"
                        },
                        new
                        {
                            Id = 3,
                            RestaurantName = "Steak House",
                            TypeOfRestaurant = "American"
                        });
                });

            modelBuilder.Entity("Restaurant.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("FK_RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfSeats = 4,
                            FK_RestaurantId = 1,
                            TableNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountOfSeats = 2,
                            FK_RestaurantId = 1,
                            TableNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            AmountOfSeats = 6,
                            FK_RestaurantId = 2,
                            TableNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            AmountOfSeats = 4,
                            FK_RestaurantId = 3,
                            TableNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            AmountOfSeats = 8,
                            FK_RestaurantId = 3,
                            TableNumber = 5
                        });
                });

            modelBuilder.Entity("Restaurant.Models.Customer", b =>
                {
                    b.HasOne("Restaurant.Models.Restaurant", "Restaurant")
                        .WithMany("Customers")
                        .HasForeignKey("FK_RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Restaurant.Models.Menu", b =>
                {
                    b.HasOne("Restaurant.Models.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("FK_RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Restaurant.Models.Order", b =>
                {
                    b.HasOne("Restaurant.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("FK_CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Menu", "Menu")
                        .WithMany("Orders")
                        .HasForeignKey("FK_MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("FK_TableId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Menu");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Restaurant.Models.Reservation", b =>
                {
                    b.HasOne("Restaurant.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("FK_CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("FK_RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("FK_TableId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Restaurant.Models.Table", b =>
                {
                    b.HasOne("Restaurant.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("FK_RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Restaurant.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Restaurant.Models.Menu", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Restaurant.Models.Restaurant", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Menus");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Restaurant.Models.Table", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
